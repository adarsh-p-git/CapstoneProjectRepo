{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "capstoneProjectInstance"
		},
		"AzureBlobStorageCapstone_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorageCapstone'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"CosmosDbNoSql1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDbNoSql1'"
		},
		"CosmosDbNoSql2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDbNoSql2'"
		},
		"SqlServerLocal_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServerLocal'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://capstonestorageaccount12.dfs.core.windows.net/"
		},
		"AzureDatabricks1_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0729-063347-lmq993qr"
		},
		"HttpServer1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://github.com/adarsh-p-git/CapstoneProject/raw/main/amazonSaleReport2.snappy.parquet"
		},
		"HttpServer2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/adarsh-p-git/CapstoneProject/main/amazonSaleData2.csv"
		},
		"HttpServer3_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/adarsh-p-git/CapstoneProject/main/International%20sale%20Report.csv"
		},
		"HttpServer4_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/adarsh-p-git/CapstoneProject/main/Sale%20Report.csv"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AmazonSalesDataPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FromLocalSQLDBtoCosmosDB",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "upsert",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbNoSqlContainer1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "GitHubToCosmosDB",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "upsert",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbNoSqlContainer1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "FromDatalakeToCosmosDB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "upsert",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Parquet3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbNoSqlContainer1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "March2021DataBlobtoCosmosDB",
						"description": "",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "upsert",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Parquet4",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbNoSqlContainer3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "May2021DataBlobToCosmos",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "upsert",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Parquet5",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbNoSqlContainer2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "InternationalDataGitToCosmos",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "upsert",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbNoSqlContainer1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SaleReportGitToCosmos",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "upsert",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DelimitedText3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbNoSqlContainer1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/CosmosDbNoSqlContainer1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/Parquet3')]",
				"[concat(variables('factoryId'), '/datasets/Parquet4')]",
				"[concat(variables('factoryId'), '/datasets/CosmosDbNoSqlContainer3')]",
				"[concat(variables('factoryId'), '/datasets/Parquet5')]",
				"[concat(variables('factoryId'), '/datasets/CosmosDbNoSqlContainer2')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ECommerceDataPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "May March Data Union",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "MarchUnionMay",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"MarchData": {},
									"MayData": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FromLocalSQLDBtoCosmosDB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "upsert",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbNoSqlContainer1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "GitHubToCosmosDB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "upsert",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbNoSqlContainer1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "FromDatalakeToCosmosDB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "upsert",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Parquet3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbNoSqlContainer1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Amazon Report ETL",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "FromLocalSQLDBtoCosmosDB",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "GitHubToCosmosDB",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "FromDatalakeToCosmosDB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/adarshp2077@outlook.com/AmazonSaleReportETL"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "May March Data ETL",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "May March Data Union",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/adarshp2077@outlook.com/MayMarchDataETL"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Data Visualisation",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "May March Data ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Amazon Report ETL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/adarshp2077@outlook.com/ECommerce Data Visualisation"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/MarchUnionMay')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/CosmosDbNoSqlContainer1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/Parquet3')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/amazon')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FromLocalSQLDBtoCosmosDB",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "upsert",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbNoSqlContainer4",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "GitHubToCosmosDB",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "upsert",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbNoSqlContainer4",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "FromDatalakeToCosmosDB",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "upsert",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Parquet3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbNoSqlContainer4",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "March2021DataBlobtoCosmosDB",
						"description": "",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "upsert",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Parquet4",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbNoSqlContainer3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/CosmosDbNoSqlContainer4')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/Parquet3')]",
				"[concat(variables('factoryId'), '/datasets/Parquet4')]",
				"[concat(variables('factoryId'), '/datasets/CosmosDbNoSqlContainer3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobToSqlLocal')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "index",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "index",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "Order ID",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Order ID",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Date",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "Fulfilment",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Fulfilment",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "ship-service-level",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Sales Channel",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "Sales Channel ",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ship-service-level",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "Style",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Style",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "SKU",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "SKU",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "Category",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Category",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "Size",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Size",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "ASIN",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ASIN",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "Courier Status",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Courier Status",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "Qty",
											"type": "Int32",
											"physicalType": "INT32"
										},
										"sink": {
											"name": "Qty",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "currency",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "currency",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "Amount",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "Amount",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "ship-city",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ship-city",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "ship-state",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ship-state",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "ship-postal-code",
											"type": "Double",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "ship-postal-code",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "ship-country",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "ship-country",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "promotion-ids",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "promotion-ids",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "B2B",
											"type": "Boolean",
											"physicalType": "BOOLEAN"
										},
										"sink": {
											"name": "B2B",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "fulfilled-by",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "fulfilled-by",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "Unnamed: 22",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "Unnamed: 22",
											"type": "String",
											"physicalType": "text"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parquet2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parquet2')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/may')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "May2021DataBlobToCosmos",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "upsert",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Parquet5",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbNoSqlContainer2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "March2021DataBlobtoCosmosDB",
						"description": "",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "upsert",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Parquet4",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbNoSqlContainer3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "FromLocalSQLDBtoCosmosDB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "upsert",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbNoSqlContainer4",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "GitHubToCosmosDB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "upsert",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbNoSqlContainer4",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "FromDatalakeToCosmosDB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbSqlApiSink",
								"writeBehavior": "upsert",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Parquet3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbNoSqlContainer4",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parquet5')]",
				"[concat(variables('factoryId'), '/datasets/CosmosDbNoSqlContainer2')]",
				"[concat(variables('factoryId'), '/datasets/Parquet4')]",
				"[concat(variables('factoryId'), '/datasets/CosmosDbNoSqlContainer3')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/CosmosDbNoSqlContainer4')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/Parquet3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbNoSqlContainer1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbNoSql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "AmazonSaleData5"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbNoSql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbNoSqlContainer2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbNoSql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "MayData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbNoSql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbNoSqlContainer3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbNoSql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "March2021"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbNoSql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbNoSqlContainer4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbNoSql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "AmazonSalesData1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbNoSql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbNoSqlContainer5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbNoSql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "MarchUnionMay"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbNoSql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbNoSqlContainer6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbNoSql1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "marchaMay"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbNoSql1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbNoSqlContainer7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbNoSql2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "marchmay3"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbNoSql2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbNoSqlContainer8')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbNoSql2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {},
				"typeProperties": {
					"collectionName": "maymarchdata"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbNoSql2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer3",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer4",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer4')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageCapstone",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "amazonSaleReport.snappy.parquet",
						"container": "amazondata"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "index",
						"type": "INT32"
					},
					{
						"name": "Order ID",
						"type": "UTF8"
					},
					{
						"name": "Date",
						"type": "UTF8"
					},
					{
						"name": "Status",
						"type": "UTF8"
					},
					{
						"name": "Fulfilment",
						"type": "UTF8"
					},
					{
						"name": "Sales Channel ",
						"type": "UTF8"
					},
					{
						"name": "ship-service-level",
						"type": "UTF8"
					},
					{
						"name": "Style",
						"type": "UTF8"
					},
					{
						"name": "SKU",
						"type": "UTF8"
					},
					{
						"name": "Category",
						"type": "UTF8"
					},
					{
						"name": "Size",
						"type": "UTF8"
					},
					{
						"name": "ASIN",
						"type": "UTF8"
					},
					{
						"name": "Courier Status",
						"type": "UTF8"
					},
					{
						"name": "Qty",
						"type": "INT32"
					},
					{
						"name": "currency",
						"type": "UTF8"
					},
					{
						"name": "Amount",
						"type": "DOUBLE"
					},
					{
						"name": "ship-city",
						"type": "UTF8"
					},
					{
						"name": "ship-state",
						"type": "UTF8"
					},
					{
						"name": "ship-postal-code",
						"type": "DOUBLE"
					},
					{
						"name": "ship-country",
						"type": "UTF8"
					},
					{
						"name": "promotion-ids",
						"type": "UTF8"
					},
					{
						"name": "B2B",
						"type": "BOOLEAN"
					},
					{
						"name": "fulfilled-by",
						"type": "UTF8"
					},
					{
						"name": "Unnamed: 22",
						"type": "BOOLEAN"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageCapstone')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageCapstone",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "amazonSaleData1.snappy.parquet",
						"container": "amazon2"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "index",
						"type": "INT32"
					},
					{
						"name": "Order ID",
						"type": "UTF8"
					},
					{
						"name": "Date",
						"type": "UTF8"
					},
					{
						"name": "Status",
						"type": "UTF8"
					},
					{
						"name": "Fulfilment",
						"type": "UTF8"
					},
					{
						"name": "Sales Channel ",
						"type": "UTF8"
					},
					{
						"name": "ship-service-level",
						"type": "UTF8"
					},
					{
						"name": "Style",
						"type": "UTF8"
					},
					{
						"name": "SKU",
						"type": "UTF8"
					},
					{
						"name": "Category",
						"type": "UTF8"
					},
					{
						"name": "Size",
						"type": "UTF8"
					},
					{
						"name": "ASIN",
						"type": "UTF8"
					},
					{
						"name": "Courier Status",
						"type": "UTF8"
					},
					{
						"name": "Qty",
						"type": "INT32"
					},
					{
						"name": "currency",
						"type": "UTF8"
					},
					{
						"name": "Amount",
						"type": "DOUBLE"
					},
					{
						"name": "ship-city",
						"type": "UTF8"
					},
					{
						"name": "ship-state",
						"type": "UTF8"
					},
					{
						"name": "ship-postal-code",
						"type": "DOUBLE"
					},
					{
						"name": "ship-country",
						"type": "UTF8"
					},
					{
						"name": "promotion-ids",
						"type": "UTF8"
					},
					{
						"name": "B2B",
						"type": "BOOLEAN"
					},
					{
						"name": "fulfilled-by",
						"type": "UTF8"
					},
					{
						"name": "Unnamed: 22",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageCapstone')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "amazonSaleData3.snappy.parquet",
						"fileSystem": "amazonsaledata3"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "index",
						"type": "INT32"
					},
					{
						"name": "Order ID",
						"type": "UTF8"
					},
					{
						"name": "Date",
						"type": "UTF8"
					},
					{
						"name": "Status",
						"type": "UTF8"
					},
					{
						"name": "Fulfilment",
						"type": "UTF8"
					},
					{
						"name": "Sales Channel ",
						"type": "UTF8"
					},
					{
						"name": "ship-service-level",
						"type": "UTF8"
					},
					{
						"name": "Style",
						"type": "UTF8"
					},
					{
						"name": "SKU",
						"type": "UTF8"
					},
					{
						"name": "Category",
						"type": "UTF8"
					},
					{
						"name": "Size",
						"type": "UTF8"
					},
					{
						"name": "ASIN",
						"type": "UTF8"
					},
					{
						"name": "Courier Status",
						"type": "UTF8"
					},
					{
						"name": "Qty",
						"type": "INT32"
					},
					{
						"name": "currency",
						"type": "UTF8"
					},
					{
						"name": "Amount",
						"type": "DOUBLE"
					},
					{
						"name": "ship-city",
						"type": "UTF8"
					},
					{
						"name": "ship-state",
						"type": "UTF8"
					},
					{
						"name": "ship-postal-code",
						"type": "DOUBLE"
					},
					{
						"name": "ship-country",
						"type": "UTF8"
					},
					{
						"name": "promotion-ids",
						"type": "UTF8"
					},
					{
						"name": "B2B",
						"type": "BOOLEAN"
					},
					{
						"name": "fulfilled-by",
						"type": "UTF8"
					},
					{
						"name": "Unnamed: 22",
						"type": "BOOLEAN"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageCapstone",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "PLMarch2021.parquet",
						"container": "marchdata"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "index",
						"type": "INT32"
					},
					{
						"name": "Sku",
						"type": "UTF8"
					},
					{
						"name": "Style Id",
						"type": "UTF8"
					},
					{
						"name": "Catalog",
						"type": "UTF8"
					},
					{
						"name": "Category",
						"type": "UTF8"
					},
					{
						"name": "Weight",
						"type": "UTF8"
					},
					{
						"name": "TP 1",
						"type": "UTF8"
					},
					{
						"name": "TP 2",
						"type": "UTF8"
					},
					{
						"name": "MRP Old",
						"type": "UTF8"
					},
					{
						"name": "Final MRP Old",
						"type": "UTF8"
					},
					{
						"name": "Ajio MRP",
						"type": "UTF8"
					},
					{
						"name": "Amazon MRP",
						"type": "UTF8"
					},
					{
						"name": "Amazon FBA MRP",
						"type": "UTF8"
					},
					{
						"name": "Flipkart MRP",
						"type": "UTF8"
					},
					{
						"name": "Limeroad MRP",
						"type": "UTF8"
					},
					{
						"name": "Myntra MRP",
						"type": "UTF8"
					},
					{
						"name": "Paytm MRP",
						"type": "UTF8"
					},
					{
						"name": "Snapdeal MRP",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageCapstone')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageCapstone",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "May2022.snappy.parquet",
						"container": "maydata"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "index",
						"type": "INT32"
					},
					{
						"name": "Sku",
						"type": "UTF8"
					},
					{
						"name": "Style Id",
						"type": "UTF8"
					},
					{
						"name": "Catalog",
						"type": "UTF8"
					},
					{
						"name": "Category",
						"type": "UTF8"
					},
					{
						"name": "Weight",
						"type": "UTF8"
					},
					{
						"name": "TP",
						"type": "UTF8"
					},
					{
						"name": "MRP Old",
						"type": "UTF8"
					},
					{
						"name": "Final MRP Old",
						"type": "UTF8"
					},
					{
						"name": "Ajio MRP",
						"type": "UTF8"
					},
					{
						"name": "Amazon MRP",
						"type": "UTF8"
					},
					{
						"name": "Amazon FBA MRP",
						"type": "UTF8"
					},
					{
						"name": "Flipkart MRP",
						"type": "UTF8"
					},
					{
						"name": "Limeroad MRP",
						"type": "UTF8"
					},
					{
						"name": "Myntra MRP",
						"type": "UTF8"
					},
					{
						"name": "Paytm MRP",
						"type": "UTF8"
					},
					{
						"name": "Snapdeal MRP",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageCapstone')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerLocal",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "AmazonSalesReport2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServerLocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorageCapstone')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Linked Service to storage Account",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorageCapstone_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3440815125851295.15.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"existingClusterId": "[parameters('AzureDatabricks1_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbNoSql1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDbNoSql1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbNoSql2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDbNoSql2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer2_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer3_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer4')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer4_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerLocal')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServerLocal_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MarchUnionMay')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Parquet4",
								"type": "DatasetReference"
							},
							"name": "MarchData"
						},
						{
							"dataset": {
								"referenceName": "Parquet5",
								"type": "DatasetReference"
							},
							"name": "MayData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "CosmosDbNoSqlContainer8",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						},
						{
							"name": "select1"
						},
						{
							"name": "derivedColumn2"
						},
						{
							"name": "union1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          index as integer,",
						"          Sku as string,",
						"          {Style Id} as string,",
						"          Catalog as string,",
						"          Category as string,",
						"          Weight as string,",
						"          {TP 1} as string,",
						"          {TP 2} as string,",
						"          {MRP Old} as string,",
						"          {Final MRP Old} as string,",
						"          {Ajio MRP} as string,",
						"          {Amazon MRP} as string,",
						"          {Amazon FBA MRP} as string,",
						"          {Flipkart MRP} as string,",
						"          {Limeroad MRP} as string,",
						"          {Myntra MRP} as string,",
						"          {Paytm MRP} as string,",
						"          {Snapdeal MRP} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> MarchData",
						"source(output(",
						"          index as integer,",
						"          Sku as string,",
						"          {Style Id} as string,",
						"          Catalog as string,",
						"          Category as string,",
						"          Weight as string,",
						"          TP as string,",
						"          {MRP Old} as string,",
						"          {Final MRP Old} as string,",
						"          {Ajio MRP} as string,",
						"          {Amazon MRP} as string,",
						"          {Amazon FBA MRP} as string,",
						"          {Flipkart MRP} as string,",
						"          {Limeroad MRP} as string,",
						"          {Myntra MRP} as string,",
						"          {Paytm MRP} as string,",
						"          {Snapdeal MRP} as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> MayData",
						"MarchData derive(TP = {TP 1},",
						"          Month = \"March\") ~> derivedColumn1",
						"derivedColumn1 select(mapColumn(",
						"          index,",
						"          Sku,",
						"          {Style Id},",
						"          Catalog,",
						"          Category,",
						"          Weight,",
						"          {MRP Old},",
						"          {Final MRP Old},",
						"          {Ajio MRP},",
						"          {Amazon MRP},",
						"          {Amazon FBA MRP},",
						"          {Flipkart MRP},",
						"          {Limeroad MRP},",
						"          {Myntra MRP},",
						"          {Paytm MRP},",
						"          {Snapdeal MRP},",
						"          TP,",
						"          Month",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"MayData derive(Month = \"May\") ~> derivedColumn2",
						"derivedColumn2, select1 union(byName: true)~> union1",
						"union1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'document',",
						"     throughput: 400,",
						"     totalWriteThroughputBudget: 400,",
						"     skipDuplicateMapInputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parquet4')]",
				"[concat(variables('factoryId'), '/datasets/Parquet5')]",
				"[concat(variables('factoryId'), '/datasets/CosmosDbNoSqlContainer8')]"
			]
		}
	]
}